#include<iostream>
#include<conio.h>
#include<Windows.h>

using namespace std;

string welcome;
string confirmed;
string order ="";
char choice;
int dlugosc;
int n;
int bill_price = 0;
int counter;

int pierogi_ruskie_cena = 15;
int pierogi_z_miesem_cena = 17;
int pierogi_z_truskawkami_cena = 16;
int nalesniki_cena = 12;
int kotlet_cena = 20;

int woda_mineralna_cena = 5;
int pepsi_cena = 7;
int mirinda_cena = 7;
int sprite_cena = 7;
int tymbark_pomarancza_cena = 6;
int tymbark_wisnia_cena = 6;

string pierogi_ruskie = "pierogi ruskie,";
string pierogi_z_miesem = "pierogi z miesem,";
string pierogi_z_truskawkami = "pierogi z truskawkami,";
string nalesniki = "nalesniki z serem,";
string kotlet = "kotlet schabowy z grillowanymi warzywami,";

string woda_mineralna = "woda mineralna,";
string pepsi = "pepsi,";
string mirinda = "mirinda,";
string sprite = "spirte,";
string tymbark_pomarancza = "tymbark pomarancza,";
string tymbark_wisnia = "tymbark wisnia jablko,";



void menu()
{
	cout << "_______________________________________________________" << endl;
	cout << "MENU NASZEJ RESTAURACJI: " << endl << endl;
	cout << "       POSILKI                                   CENA" << endl;
	cout << "   1. Pierogi ruskie                              15" << endl;
	cout << "   2. Pierogi z miesem                            17" << endl;
	cout << "   3. Pierogi z truskawkami                       16" << endl;
	cout << "   4. Nalesniki z serem                           12" << endl;
	cout << "   5. Kotlet schabowy z grillowanymi warzywami    20" << endl << endl;
	cout << "       NAPOJE" << endl;
	cout << "   6. Woda mineralna  (0,5l)                      5" << endl;
	cout << "   7. Pepsi  (0,5l)                               7" << endl;
	cout << "   8. Mirinda  (0,5l)                             7" << endl;
	cout << "   9. Sprite  (0,5l)                              7" << endl;
	cout << "   10. Tymbark - pomarancza  (0,5l)               6" << endl;
	cout << "   11. Tymbark - wisnia, jablko  (0,5l)           6" << endl;
	cout << "_______________________________________________________" << endl;
}

class Szef_kuchni {

public:
	int NumerIDPracownika;
	string ImieSzefaKuchni;
	string NazwiskoSzefaKuchni;
	char character = ' ';
	unsigned tries = 3;
	Szef_kuchni();
	void LogowanieSzefKuchni();
private:
	string PasswordChef;
	string password = "";
};
Szef_kuchni::Szef_kuchni()
{
	PasswordChef = "szefkuchni";
}
void Szef_kuchni::LogowanieSzefKuchni()
{
	cout << "Wpisano login dla szefa kuchni" << endl;
	do {
		cout << "Wpisz haslo: ";
		while ((character = _getch()) != '\r') {
			cout << "*";
			password += character;
		}

		if (password != PasswordChef) {
			password = "";
			tries -= 1;
			cout << "\nDostepne proby: " << tries << endl;
		}
	} while (tries > 0 && password != PasswordChef);

	if (tries == 0) cout << "\nUzytkownik zablokowany!\n";
	else cout << "\nHaslo poprawne. Witamy w systemie!\n";
}

class Kelner
{
public:
	int NumerIDPracownika;
	string ImieKelnera;
	string NazwiskoKelnera;
	char character = ' ';
	unsigned tries = 3;
	Kelner();
	void LogowanieKelner();
private:
	string PasswordWaiter;
	string password = "";
};

Kelner::Kelner()
{
	PasswordWaiter = "kelner";
}
void Kelner::LogowanieKelner()
{
	cout << "Wpisano login dla kelnera" << endl;
	do {
		cout << "Wpisz haslo: ";
		while ((character = _getch()) != '\r') {
			cout << "*";
			password += character;
		}

		if (password != PasswordWaiter) {
			password = "";
			tries -= 1;
			cout << "\nDostepne proby: " << tries << endl;
		}
	} while (tries > 0 && password != PasswordWaiter);

	if (tries == 0) cout << "\nUzytkownik zablokowany!\n";
	else cout << "\nHaslo poprawne. Witamy w systemie!\n";
}

class Dostawca {

public:
	int NumerIDPracownika;
	string ImieDostawcy;
	string NazwiskoDostawcy;
	char character = ' ';
	unsigned tries = 3;
	Dostawca();
	void LogowanieDostawca();
private:
	string PasswordSupplier;
	string password = "";
};

Dostawca::Dostawca()
{
	PasswordSupplier = "dostawca";
}
void Dostawca::LogowanieDostawca()
{
	cout << "Wpisano login dla dostawcy" << endl;
	do {
		cout << "Wpisz haslo: ";
		while ((character = _getch()) != '\r') {
			cout << "*";
			password += character;
		}

		if (password != PasswordSupplier) {
			password = "";
			tries -= 1;
			cout << "\nDostepne proby: " << tries << endl;
		}
	} while (tries > 0 && password != PasswordSupplier);

	if (tries == 0) cout << "\nUzytkownik zablokowany!\n";
	else cout << "\nHaslo poprawne. Witamy w systemie!\n";


}

class Manager {

public:
	int NumerIDPracownika;
	string ImieManagera;
	string NazwiskoManagera;
	char character = ' ';
	unsigned tries = 3;
	Manager();
	void LogowanieManager();
private:
	string PasswordManager;
	string password = "";
};
Manager::Manager()
{
	PasswordManager = "manager";
}
void Manager::LogowanieManager()
{
	cout << "Wpisano login dla Managera" << endl;
	do {
		cout << "Wpisz haslo: ";
		while ((character = _getch()) != '\r') {
			cout << "*";
			password += character;
		}

		if (password != PasswordManager) {
			password = "";
			tries -= 1;
			cout << "\nDostepne proby: " << tries << endl;
		}
	} while (tries > 0 && password != PasswordManager);

	if (tries == 0) cout << "\nUzytkownik zablokowany!\n";
	else cout << "\nHaslo poprawne. Witamy w systemie szefie!\n";
}

class Napoje
{

	friend class Magazyn;

public:
	int NumerIDNapoju;
	string NazwaNapoju;
	double Ilosc_Napoju;
	double CenaNapoju;

};

class Produkty
{
	friend class Posilki;

public:
	int NumerIDProduktu;
	string NazwaProduktu;
	double Ilosc_Produktu;
	double CenaProduktu;

};

class Posilki
{
	friend class Magazyn;

public:
	int ilosc_produktow;
	Produkty* tab_Produktow;
	int NumerIDPosilku;
	string NazwaPosilku;

	double CenaPosilku;
	Posilki();
	Posilki(int a);
	~Posilki();
	bool PrzygotowaniePosilku();
};
Posilki::Posilki()
{

}
Posilki::Posilki(int a)
{
	ilosc_produktow = a;
	tab_Produktow = new Produkty[ilosc_produktow];
}

Posilki::~Posilki()
{
	delete[] tab_Produktow;
}



class Magazyn
{
public:
	int ilosc_napojow;
	int ilosc_posilkow;

	Napoje* tab_Napoje;

	Posilki* tab_Posilki;

	int NumerIdProduktu;
	string NazwaProduktu;
	double CenaProduktu;
	Magazyn(int a, int b);
	~Magazyn();
	void SprawdzenieStanuZaopatrzenia();
	void ZlozenieZamowienia();
	void DostarczenieZamowienia();
	void ZmianaStanuMagazynu();
};

Magazyn::Magazyn(int a, int b)
{
	ilosc_napojow = a;
	ilosc_posilkow = b;
	tab_Napoje = new Napoje[ilosc_napojow];
	tab_Posilki = new Posilki[ilosc_posilkow];
}

Magazyn::~Magazyn()
{
	delete[] tab_Napoje;
	delete[] tab_Posilki;
}




class Zamowienie
{
public:
	int NumerIDZamowienia;
	//date TerminZamowienia;
	int NumerKelneraTegoZamowienia;
	int KolejnoscZamowienia;
	double ZnizkaNaZamowienie;
	string StatusZamowienia;
	string RodzajPlatnosciZaZamowienie;
	string Na_miejscu_Na_wynos;
	void PrzygotowanieZamowienia();
	void SerwowanieZamowienia();
	void WydrukRachunku();
};

class Rachunek
{
	int NumerIDRachunku;
	//Data wystawienia rachunku
	string PozycjeZamowienia;
	double CalkowityKosztZamowienia;
	void PrzekazanieRachunku();
	double OdebranieZaplaty();
};


int main()
{

	//  MAGAZYN  //////////////////////
	/*
	Magazyn magazyn1(6, 5);



	magazyn1.tab_Napoje[0] = { 1, "Woda mineralna 0,5l", 4, 100 };
	magazyn1.tab_Napoje[1] = { 2, "Pepsi 0,5l", 5, 100 };
	magazyn1.tab_Napoje[2] = { 3, "Mirinda 0,5l", 5, 200 };
	magazyn1.tab_Napoje[3] = { 4, "Sprite 0,5l", 5, 50 };
	magazyn1.tab_Napoje[4] = { 5, "Tymbark - pomarańcza 0,5l", 5, 20 };
	magazyn1.tab_Napoje[5] = { 6, "Tymbark - wiśnia, jabłko 0,5l", 5, 10 };



	magazyn1.tab_Posilki[0] = { 1, "Pierogi ruskie", 15 };
	magazyn1.tab_Posilki[1] = { 2, "Pierogi z mięsem", 17 };
	magazyn1.tab_Posilki[2] = { 3, "Pierogi z truskawkami", 14 };
	magazyn1.tab_Posilki[3] = { 4, "Naleśniki z serem", 15 };
	magazyn1.tab_Posilki[4] = { 5, "Kotlet schabowy z grillowanymi warzywami", 25 };
	*/


	//  LOGOWANIE  //////////////////
	string login;

	system("pause");
	cout << welcome;
	welcome = "WITAMY W NASZEJ RESTAURACJI!\n\n*Wchodza klienci i siadaja do stolika.*\n*Podchodzi kelner i podaje MENU.*\n";

	dlugosc = welcome.length();

	for (int j = 0; j <= dlugosc; j++)
	{
		cout << welcome[j];
		Sleep(50);
	}
	Sleep(1000);

	menu();
	cout << endl;


	cout << "KELNER: Witam, czy mozna przyjac zamowienie?" << endl;
	cout << "KLIENT: Tak, oczywiscie." << endl << endl;
	Sleep(2000);
	
	cout << "*Wybierz pozycje do zamowienia" << endl << endl;

	do
	{
		choice = _getch();

		switch (choice)
		{
		case '1':
		{
			cout << "KLIENT: Poprosze pierogi ruskie." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;

			choice = _getch();
			
			if (choice == '1')
			{
				cout << "KLIENT: Poprosze raz.";
				counter = 1;
				
				order = order + " raz " + pierogi_ruskie;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + pierogi_ruskie;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;
			
			bill_price = bill_price + (pierogi_ruskie_cena * counter);
		}break;
		case '2':
		{
			cout << "KLEINT: Poprosze pierogi z miesem." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;
			
			choice = _getch();

			if (choice == '1')
			{
				cout << "KLIENT: Raz poprosze.";

				order = order + " raz " + pierogi_z_miesem;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + pierogi_z_miesem;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;

			bill_price = bill_price + (pierogi_z_miesem_cena * counter);
		}break;

		case '3':
		{
			cout << "KLIENT: Poprosze pierogi z truskawkami." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;

			choice = _getch();

			if (choice == '1')
			{
				cout << "KLIENT: Poprosze raz.";
				counter = 1;

				order = order + " raz " + pierogi_z_truskawkami;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + pierogi_z_truskawkami;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;

			bill_price = bill_price + (pierogi_z_truskawkami_cena * counter);
		}break;

		case '4':
		{
			cout << "KLIENT: Poprosze nalesniki z serem." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;

			choice = _getch();

			if (choice == '1')
			{
				cout << "KLIENT: Poprosze raz.";
				counter = 1;

				order = order + " raz " + nalesniki;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + nalesniki;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;

			bill_price = bill_price + (nalesniki_cena * counter);
		}break;

		case '5':
		{
			cout << "KLIENT: Poprosze kotleta schabowego z grillowanymi warzywami." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;

			choice = _getch();

			if (choice == '1')
			{
				cout << "KLIENT: Poprosze raz.";
				counter = 1;

				order = order + " raz " + kotlet;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + kotlet;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;

			bill_price = bill_price + (kotlet_cena * counter);
		}break;

		case '6':
		{
			cout << "KLIENT: Do picia poprosze wode mineralna." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;

			choice = _getch();

			if (choice == '1')
			{
				cout << "KLIENT: Poprosze raz.";
				counter = 1;

				order = order + " raz " + woda_mineralna;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + woda_mineralna;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;

			bill_price = bill_price + (woda_mineralna_cena * counter);
		}break;

		case '7':
		{
			cout << "KLIENT: Do picia poprosze Pepsi." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;

			choice = _getch();

			if (choice == '1')
			{
				cout << "KLIENT: Poprosze raz.";
				counter = 1;

				order = order + " raz " + pepsi;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + pepsi;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;

			bill_price = bill_price + (pepsi_cena * counter);
		}break;

		case '8':
		{
			cout << "KLIENT: Do picia poprosze Mirinde." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;

			choice = _getch();

			if (choice == '1')
			{
				cout << "KLIENT: Poprosze raz.";
				counter = 1;

				order = order + " raz " + mirinda;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + mirinda;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;

			bill_price = bill_price + (mirinda_cena * counter);
		}break;

		case '9':
		{
			cout << "KLIENT: Do picia poprosze Sprite." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;

			choice = _getch();

			if (choice == '1')
			{
				cout << "KLIENT: Poprosze raz.";
				counter = 1;

				order = order + " raz " + sprite;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + sprite;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;

			bill_price = bill_price + (sprite_cena * counter);
		}break;

		case '10':
		{
			cout << "KLIENT: Do picia poprosze Tymbark o smaku pomaranczowym." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;

			choice = _getch();

			if (choice == '1')
			{
				cout << "KLIENT: Poprosze raz.";
				counter = 1;

				order = order + " raz " + tymbark_pomarancza;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + tymbark_pomarancza;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;

			bill_price = bill_price + (tymbark_pomarancza_cena * counter);
		}break;

		case '11':
		{
			cout << "KLIENT: Do picia poprosze Tymbark o smaku wisni z jablkiem." << endl;
			Sleep(2000);
			cout << "KELNER: Ile razy?" << endl;

			choice = _getch();

			if (choice == '1')
			{
				cout << "KLIENT: Poprosze raz.";
				counter = 1;

				order = order + " raz " + tymbark_wisnia;
			}
			else
			{
				cout << "KLIENT: " << choice << " razy poprosze.";

				order = order + " " + choice + "razy " + tymbark_wisnia;
			}

			if (choice == '2')
				counter = 2;
			if (choice == '3')
				counter = 3;
			if (choice == '4')
				counter = 4;
			if (choice == '5')
				counter = 5;
			if (choice == '6')
				counter = 6;
			if (choice == '7')
				counter = 7;
			if (choice == '8')
				counter = 8;
			if (choice == '9')
				counter = 9;

			bill_price = bill_price + (tymbark_wisnia_cena * counter);
		}break;

		default:
		{
			cout << "KELNER: Przepraszam, ale niestety nie mamy takiej pozycji w naszym MENU.";
			Sleep(2000);
		}break;
		}

		Sleep(2000);
		cout << endl << "KELNER: Czy bedzie cos jeszcze?";
		Sleep(2000);

		cout << endl << endl << "*1. Dodaj inne pozycje do zamowienia.*" << endl;
		cout << "*(dowolony przycisk) Zakoncz zamowienie.*" << endl;
		
		choice = _getch();

		if (choice == '1')
		{
			cout << endl << "KLIENT: Tak, jeszcze cos domowie." << endl;
			Sleep(2000);
			cout << "KELNER: Dobrze, slucham?" << endl << endl;
			Sleep(3500);
			system("cls");
			menu();
			cout << endl << endl << "*Wybierz kolejne pozycje do zamowienia" << endl << endl;
		}
		else if (choice == '0')
		{
			cout << endl << "KLIENT: Dziekuje, to wszystko." << endl;
			Sleep(2000);
		}
		else
		{
			cout << "" << endl;
		}

	} while (choice == '1');

	Sleep(1000);
	cout << endl << endl << "KELNER: W takim razie bardzo dziekuje. Dla pewnosci powtorze zamowienie." << endl;
	Sleep(2000);
	cout << "KELNER: Mamy tutaj" << order << "\nCzy wszystko sie zgadza?" << endl << endl;
	
	system("pause");

	cout << endl << "KLIENT: Tak, zamowienie sie zgadza." << endl;
	Sleep(2000);

	cout << "KELNER: Bardzo sie ciesze. Rachunek do zaplaty bedzie wynosil " << bill_price << "zl" << endl;
	Sleep(2000);

	cout << endl << endl << confirmed;
	confirmed = "\t\t\t*Zamowienie zostalo zlozone*";

	dlugosc = confirmed.length();

	for (int j = 0; j <= dlugosc; j++)
	{
		cout << confirmed[j];
		Sleep(50);
	}
	cout << endl << endl;
	system("pause");

	system("cls"); 


	for (;;)
	{
		cout << "\n\n\n\n";
		cout << "\t\t*************************************************" << endl;
		cout << "\t\t*                                               *" << endl;
		cout << "\t\t*            WITAJ W SYSTEMIE RESTAURACJI !     *" << endl;
		cout << "\t\t*                                               *" << endl;
		cout << "\t\t*    DOSTEPNI UZYTKOWNICY:                      *" << endl;
		cout << "\t\t*  - Manager                                    *" << endl;
		cout << "\t\t*  - Kelner                                     *" << endl;
		cout << "\t\t*  - SzefKuchni                                 *" << endl;
		cout << "\t\t*  - Dostawca                                   *" << endl;
		cout << "\t\t*                                               *" << endl;
		cout << "\t\t*  WYBIERZ KONTO WPISUJAC LOGIN UZYTKOWNIKA     *" << endl;
		cout << "\t\t*                                               *" << endl;
		cout << "\t\t*************************************************" << endl;

		cout << "Wpisz login: " << endl;
		cin >> login;

		if (login == "Kelner")
		{
			Kelner* kelner1 = new Kelner;
			kelner1->LogowanieKelner();
			break;
		}
		else if (login == "SzefKuchni")
		{
			Szef_kuchni* szef = new Szef_kuchni;
			szef->LogowanieSzefKuchni();
			break;
		}
		else if (login == "Dostawca")
		{
			Dostawca* dostawca1 = new Dostawca;
			dostawca1->LogowanieDostawca();
			break;
		}
		else if (login == "Manager")
		{
			Manager* manager1 = new Manager;
			manager1->LogowanieManager();
			break;
		}
		else
		{
			cout << "Podano zly login, skontaktuj sie z administratorem w celu zmiany loginu i hasla badz wpisz jeszcze raz: " << endl;
			Sleep(2000);
			system("cls");
		}
	}








	cout << endl << "Restaurant project by: Michal Nycz, Jakub Pietrzak, Artur Pietrzkiewicz" << endl;



	return 0;
}
